<?xml version="1.0" encoding="UTF-8"?>
<project default="clean" basedir="." name="mongodb-extension">
	<description>
        Build MongoDB Extension
    </description>
    <!-- set global properties for this build -->
  <property name="bundlename" value="mongodb.extension"/>
  <property name="bundleversion" value="1.0.1."/>
  
  <property name="lib" location="source/java/libs"/>
  <property name="src" location="source/java/src"/>
  <property name="build" location="build"/>
  <property name="fld" location="${build}/flds"/>
  <property name="temp" location="temp"/>
  <property name="dist"  location="dist"/>
  
  <buildnumber file="build.number"/>

  <scriptdef name="replace" language="javascript">
     <attribute name="haystack" />
     <attribute name="needle" />
     <attribute name="repl" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("haystack");
      var needle = attributes.get("needle");
      var repl = attributes.get("repl");
      text=text.trim();
      text=text.replace(needle,repl);
      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>

  <path id="classpath">
    <!-- use the loader project directly <pathelement location="${luceeLoader}" /> -->
    <fileset dir="${lib}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    
    <delete dir="${temp}"/>
    <delete dir="${dist}"/>

    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${temp}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}/"/>
  </target>


  <target name="copy" depends="init" description="copy source file to temp" >
    <!-- copy the source
    <copy todir="${temp}">
      <fileset dir="${src}">
        <include name="**/*.java"/>
      </fileset>
    </copy> -->


    <tstamp>
     <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>

    <echo file="${dist}/extension/META-INF/MANIFEST.MF">Manifest-Version: 1.0
Built-Date: ${NOW}
version: "${bundleversion}${build.number}"
id: "E6634E1A-4CC5-4839-A83C67549ECA8D5B"
name: "MongoDB Integration"
description: "MongoDB (from "humongous") is a cross-platform document-oriented database. 
 Classified as a NoSQL database, MongoDB eschews the traditional table-based relational database structure in favor of JSON-like 
 documents with dynamic schemas (MongoDB calls the format BSON), making the integration of data in certain types of 
 applications easier and faster."
start-bundles: false
trial: false
lucee-core-version: "5.0.0.021"
</echo>


  </target>
  


  <target name="compile" depends="copy"
        description="compile the source " >
    <!-- Compile Java source -->
    <javac srcdir="${src}" target="1.6" destdir="${temp}" debug="true" debuglevel="lines,vars,source">
      <classpath refid="classpath" />
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    
 
    <!-- Put everything in ${build} into .jar file -->
    <jar 
    	jarfile="${dist}/extension/jars/mongodb-extension-${bundleversion}${build.number}.jar" basedir="${temp}"  manifest="${src}/META-INF/MANIFEST.MF">
      <manifest>
        <attribute name="Bundle-Version" value="${bundleversion}${build.number}"/>
        <attribute name="Built-Date" value="${NOW}"/>
        <attribute name="Bundle-SymbolicName" value="${bundlename}"/>

      </manifest>
    </jar>


    <!-- copy the tlds necessary -->
    <loadfile property="content1" srcFile="${fld}/mongodb.fld" />
    <replace haystack="${content1}" needle="{bundle-name}" repl="${bundlename}" property="content2"/>
    <replace haystack="${content2}" needle="{bundle-version}" repl="${bundleversion}${build.number}" property="content3"/>
    <echo message="${content3}" file="${dist}/extension/flds/mongodb.fld"/>

    <!-- copy the context necessary -->
    <copy todir="${dist}/extension/applications">
      <fileset dir="${build}/applications">
        <include name="**/*.*"/>
      </fileset>
    </copy>

    <!-- copy the jars necessary -->
    <copy todir="${dist}/extension/jars">
      <fileset dir="${lib}">
        <include name="**/*.jar"/>
        <exclude name="**/javax.servlet.jar"/>
      </fileset>
    </copy>

    <!-- copy the logo -->
    <copy todir="${dist}/extension/META-INF">
      <fileset dir="${build}/images">
        <include name="logo.png"/>
      </fileset>
    </copy>

    <!-- Zip everything  -->
     <zip destfile="${dist}/mongodb-extension-${bundleversion}${build.number}.re">
        <zipfileset dir="${dist}/extension"/>
    </zip>
		
  </target>

	<target name="clean"  depends="dist" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${temp}"/>
    <delete dir="${dist}/extension"/>
	</target>

</project>